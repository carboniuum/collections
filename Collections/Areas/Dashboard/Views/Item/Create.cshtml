@model ItemCreateViewModel

<h1 class="font-bold pl-2">Add Item</h1>

<div class="w-full mt-4">
	<form 
		asp-action="Create"
		class="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4"
		method="post"
		enctype="multipart/form-data"
	>
		<input asp-for="CollectionId" type="hidden" value="@(Context.Request.Query["collection"][0])" />
		<div class="mb-4">
			<label class="block text-gray-700 text-sm font-bold mb-2" asp-for="Name"></label>
			<input
				asp-for="Name"
				class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" 
				type="text" 
				required
			/>
		</div>
		
		<div class="mb-4">
			<label class="block text-gray-700 text-sm font-bold mb-2" asp-for="Tags"></label>
			<input
				asp-for="Tags"
				class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" 
				type="text" 
				placeholder="Write some tags through commas..."
				required
			/>
		</div>

		<div class="mb-4">
			<label class="block text-gray-700 text-sm font-bold mb-2" asp-for="Image"></label>
			<input
				asp-for="Image"
				class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" 
				type="file" 
			/>
		</div>
		
		<div class="mb-4 flex items-center">
			<div class="w-1/2">
				<label class="block text-gray-700 text-sm font-bold mb-2" for="fieldGroupSelect">
					Choose the type of the field
				</label>
				<select
					id="fieldGroupSelect"
					class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" 
				>
				</select>
			</div>

			<div class="w-1/2 flex justify-end">
				<button id="addFieldBtn" type="button" class="px-4 py-2 bg-green-500 text-white rounded">Add</button>
			</div>
		</div>

		<div id="fieldGroupsWrapper">

		</div>

		<div class="flex items-center justify-between">
			<button
				class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline" 
				type="submit"
			>
				Save
			</button>
		</div>
	</form>
</div>

@section Scripts {
	<script>
		const fieldGroupSelect = document.getElementById('fieldGroupSelect')
		const addFieldBtn = document.getElementById('addFieldBtn')
		const fieldGroupsWrapper = document.getElementById('fieldGroupsWrapper')
		const types = { 'Number': 1, 'Text': 2, 'Textarea': 3, 'Checkbox': 4 }

		const getFieldGroups = async () => {
			try {
				const res = await fetch('/api/fieldgroups')
				const fieldGroups = await res.json()
				let index = 0;
				for (let fg of fieldGroups)
				{
					let opt = document.createElement('option');
					opt.value = fg.name
					opt.innerHTML = fg.name

					fieldGroupSelect.appendChild(opt)
					index++
				}
			} catch (e) {
				console.log(e.message)
			}
		}

		const getKeyValueGroup = inputType => {
			let group;

			switch(inputType) {
				case 'Textarea':
					group = `
						<div class="mb-4">
							<label class="block text-gray-700 text-sm font-bold mb-2">Key-Value Pair</label>
							<div class="flex">
								<input name="types" type="hidden" value="${types[inputType]}" />
								<input
									name="keys"
									class="mr-2 shadow appearance-none border rounded w-1/2 py-2 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" 
									type="text" 
									placeholder="Key..."
									required
								/>
								<textarea
									name="values"
									class="shadow appearance-none border rounded w-1/2 py-2 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" 
									type="text"
									placeholder="Value..."
									required
								></textarea>
							</div>
						</div>`
					break
				case 'Checkbox':
					group = `
						<div class="mb-4">
							<label class="block text-gray-700 text-sm font-bold mb-2">Key-Value Pair</label>
							<div class="flex">
								<input name="types" type="hidden" value="${types[inputType]}" />
								<input
									name="keys"
									class="mr-2 shadow appearance-none border rounded w-1/2 py-2 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" 
									type="text" 
									placeholder="Key..."
									required
								/>
								<input
									name="values" 
									type="checkbox" 
									required
								/>
							</div>
						</div>`
					break
				default:
					group = `
						<div class="mb-4">
							<label class="block text-gray-700 text-sm font-bold mb-2">Key-Value Pair</label>
							<div class="flex">
								<input name="types" type="hidden" value="${types[inputType]}" />
								<input
									name="keys"
									class="mr-2 shadow appearance-none border rounded w-1/2 py-2 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" 
									type="text" 
									placeholder="Key..."
									required
								/>
								<input
									name="values"
									class="shadow appearance-none border rounded w-1/2 py-2 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" 
									type="${inputType}"
									placeholder="Value..."
									required
								/>
							</div>
						</div>`
					break
			}

			return group;
		}

		getFieldGroups()

		addFieldBtn.addEventListener('click', (e) => {
			fieldGroupsWrapper.innerHTML += getKeyValueGroup(fieldGroupSelect.value)
		})
	</script>
}